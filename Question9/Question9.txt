<h1>Question - 09</h1>

Problem Statement:
A Direct Address Table is a simple way to map a key to its value using an array. The index of the array represents the key, and the value at that index represents the data associated with the key.

Write a program to implement a Direct Address Table for integer keys ranging from 0 to n-1. You need to support the following operations:

Insert (key, value): Insert a value at the given key.
Search (key): Retrieve the value associated with the given key.
Delete (key): Remove the value associated with the given key.

Input:
The first line contains an integer n (the size of the table).
The second line contains an integer q (the number of queries).
Each of the next q lines contains a query in one of the following formats:
- INSERT key value: Insert value at the position key.
- SEARCH key: Retrieve the value at the position key. If the key does not exist, return ""NOT FOUND"".
- DELETE key: Remove the value at the position key.

Output:
For each SEARCH query, output the value associated with the key or ""NOT FOUND"" if the key does not exist.

Example:
Input:
5
6
INSERT 2 100
INSERT 3 200
SEARCH 2
DELETE 2
SEARCH 2
SEARCH 3

Output:
100
NOT FOUND
200

Explanation:

After INSERT 2 100, the table looks like: [None, None, 100, None, None].
After INSERT 3 200, the table looks like: [None, None, 100, 200, None].
SEARCH 2 retrieves the value 100.
DELETE 2 removes the value at key 2. The table becomes [None, None, None, 200, None].
SEARCH 2 now returns ""NOT FOUND"".
SEARCH 3 retrieves the value 200.
This problem tests the understanding of direct address tables and basic hashing concepts.